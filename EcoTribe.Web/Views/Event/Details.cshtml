@model EcoTribe.BusinessObjects.ViewModels.EventDetailsViewModel

@{
    ViewData["Title"] = "Event Details";
}

@section Styles {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
    <link rel="stylesheet" href="~/css/event-details.css" />
}

<div class="event-details-container">
    <div class="event-hero">
        <div class="event-hero-overlay"></div>
        <div class="container position-relative">
            <h1 class="event-title">@Model.Name</h1>
            <div class="event-meta">
                <span class="event-meta-item"><i class="bi bi-geo-alt"></i> @Model.City</span>
                <span class="event-meta-item"><i class="bi bi-calendar"></i> @Model.Start.ToString("MMM d, yyyy")</span>
                <span class="event-meta-item"><i class="bi bi-clock"></i> @Model.Start.ToString("h:mm tt") - @Model.End.ToString("h:mm tt")</span>
            </div>
        </div>
    </div>

    <div class="container mt-4">
        <div class="row">
            <div class="col-lg-8">
                <div class="content-card mb-4 animate-on-scroll fade-in">
                    <h2 class="section-title"><i class="bi bi-info-circle"></i> About This Event</h2>
                    <p class="event-description">@Model.Description</p>

                    <div class="event-details-grid">
                        <div class="event-detail-item">
                            <div class="detail-icon"><i class="bi bi-calendar-date"></i></div>
                            <div class="detail-content">
                                <h4>Date</h4>
                                <p>@Model.Start.ToString("dddd, MMMM d, yyyy")</p>
                            </div>
                        </div>
                        <div class="event-detail-item">
                            <div class="detail-icon"><i class="bi bi-clock"></i></div>
                            <div class="detail-content">
                                <h4>Time</h4>
                                <p>@Model.Start.ToString("h:mm tt") - @Model.End.ToString("h:mm tt")</p>
                            </div>
                        </div>
                        <div class="event-detail-item">
                            <div class="detail-icon"><i class="bi bi-geo-alt"></i></div>
                            <div class="detail-content">
                                <h4>Location</h4>
                                <p>@Model.City</p>
                            </div>
                        </div>
                        <div class="event-detail-item">
                            <div class="detail-icon"><i class="bi bi-tag"></i></div>
                            <div class="detail-content">
                                <h4>Type</h4>
                                <p>@Model.Type</p>
                            </div>
                        </div>
                        <div class="event-detail-item">
                            <div class="detail-icon"><i class="bi bi-people"></i></div>
                            <div class="detail-content">
                                <h4>Volunteers Needed</h4>
                                <p>@Model.RequiredVolunteers</p>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="content-card mb-4 animate-on-scroll fade-in">
                    <h2 class="section-title"><i class="bi bi-map"></i> Location</h2>
                    <div id="map" class="event-map"></div>
                </div>

                <div class="content-card mb-4 animate-on-scroll fade-in">
                    <h2 class="section-title"><i class="bi bi-chat-dots"></i> Feedback</h2>
                    @if (Model.Feedbacks.Any())
                    {
                        <div class="feedback-list">
                            @foreach (var feedback in Model.Feedbacks)
                            {
                                <div class="feedback-item">
                                    <div class="feedback-header">
                                        <div class="feedback-author">@feedback.VolunteerName</div>
                                        <div class="feedback-date">@feedback.CreatedAt.ToString("MMM d, yyyy")</div>
                                    </div>
                                    <div class="feedback-rating">
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            <i class="bi bi-star-fill @(i <= feedback.Rating ? "star-active" : "star-inactive")"></i>
                                        }
                                        <span class="rating-text">@feedback.Rating/5</span>
                                    </div>
                                    <div class="feedback-comment">
                                        @(string.IsNullOrEmpty(feedback.Comments) ? "No comments" : feedback.Comments)
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="empty-state">
                            <i class="bi bi-chat-slash empty-icon"></i>
                            <p>No feedback available for this event yet.</p>
                        </div>
                    }

                    @if (User.Identity.IsAuthenticated && Model.UserRole == "User")
                    {
                        if (Model.Start <= DateTime.UtcNow)
                        {
                            <div class="feedback-form mt-4">
                                <h3>Share Your Experience</h3>
                                <form asp-controller="Feedback" asp-action="SubmitFeedback" method="post">
                                    <input type="hidden" name="EventId" value="@Model.Id" />
                                    <input type="hidden" name="VolunteerId" value="@Model.VolunteerId" />
                                    <input type="hidden" name="CreatedAt" value="@DateTime.UtcNow" />
                                    <input type="hidden" name="VolunteerName" value="@User.Identity.Name" />

                                    <div class="mb-3">
                                        <label class="form-label">Rating</label>
                                        <div class="star-rating">
                                            @for (int i = 5; i >= 1; i--)
                                            {
                                                <input type="radio" id="star@(i)" name="Rating" value="@i" required />
                                                <label for="star@(i)" class="star"><i class="bi bi-star-fill"></i></label>
                                            }
                                        </div>
                                    </div>

                                    <div class="mb-3">
                                        <label class="form-label">Comments (Optional)</label>
                                        <textarea name="Comments" class="form-control custom-input" maxlength="1000" placeholder="Share your thoughts about this event..."></textarea>
                                    </div>

                                    <button type="submit" class="btn btn-eco-primary">
                                        <i class="bi bi-send"></i> Submit Feedback
                                    </button>
                                </form>
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-info mt-4">
                                <i class="bi bi-info-circle"></i> You can leave feedback after the event has started.
                            </div>
                        }
                    }
                </div>

                <div class="content-card mb-4 animate-on-scroll fade-in">
                    <h2 class="section-title"><i class="bi bi-images"></i> Event Gallery</h2>
                    @if (Model.EventPhotos != null && Model.EventPhotos.Any())
                    {
                        <div class="modern-gallery">
                            <div class="gallery-grid" id="photoGallery">
                                @for (int i = 0; i < Model.EventPhotos.Count(); i++)
                                {
                                    var photo = Model.EventPhotos.ElementAt(i);
                                    <div class="gallery-item @(i == 0 ? "gallery-item-large" : "")" data-index="@i">
                                        <div class="gallery-image-container">
                                            <img src="@Url.Content(photo.Url)" alt="Event Photo @(i + 1)" class="gallery-image" loading="lazy" />
                                            <div class="gallery-overlay">
                                                <div class="gallery-overlay-content">
                                                    <button class="gallery-expand-btn" onclick="openLightbox(@i)">
                                                        <i class="bi bi-zoom-in"></i>
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>

                            @if (Model.EventPhotos.Count() > 6)
                            {
                                <div class="gallery-view-all">
                                    <button class="btn btn-outline-primary" onclick="showAllPhotos()">
                                        <i class="bi bi-grid-3x3"></i> View All @Model.EventPhotos.Count() Photos
                                    </button>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="gallery-empty-state">
                            <div class="empty-gallery-icon">
                                <i class="bi bi-camera"></i>
                            </div>
                            <h3>No Photos Yet</h3>
                            <p>Photos from this event will appear here once they're uploaded.</p>
                            @if (User.IsInRole("Administrator") || User.IsInRole("Organizator"))
                            {
                                <a asp-action="AddPhoto" asp-route-id="@Model.Id" class="btn btn-eco-primary">
                                    <i class="bi bi-plus-circle"></i> Upload First Photos
                                </a>
                            }
                        </div>
                    }
                </div>
            </div>

            <div class="col-lg-4">
                <div class="content-card mb-4 animate-on-scroll slide-in-right">
                    <div class="card-actions">
                        <a asp-action="Index" class="btn btn-outline-secondary">
                            <i class="bi bi-arrow-left"></i> Back to Events
                        </a>

                        @if (User.Identity.IsAuthenticated && Model.UserRole == "User")
                        {
                            var hasEnded = Model.End < DateTime.UtcNow;

                            if (hasEnded)
                            {
                                <div class="mt-3 alert alert-secondary text-center fw-bold">
                                    <i class="bi bi-exclamation-circle"></i> The event has ended
                                </div>
                            }
                            else
                            {
                                <form id="participation-form" asp-controller="EventVolunteer" asp-action="ToggleParticipation" method="post" class="mt-3">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="EventId" value="@Model.Id" />
                                    <button type="submit" class="btn btn-eco-primary btn-lg w-100" id="participation-button">
                                        <i class="bi @(Model.IsParticipating ? "bi-person-dash" : "bi-person-plus")"></i>
                                        @(Model.IsParticipating ? "Cancel Participation" : "Volunteer for this Event")
                                    </button>
                                </form>
                                <div id="participation-message"></div>
                            }
                        }
                    </div>
                </div>

                <div class="content-card mb-4 animate-on-scroll slide-in-right">
                    <h2 class="section-title"><i class="bi bi-people"></i> Volunteers</h2>
                    @if (Model.AttendingVolunteers.Any())
                    {
                        <div class="volunteers-list">
                            @foreach (var volunteer in Model.AttendingVolunteers)
                            {
                                <div class="volunteer-card">
                                    <div class="volunteer-avatar">
                                        <i class="bi bi-person-circle"></i>
                                    </div>
                                    <div class="volunteer-info">
                                        <h4 class="volunteer-name">@volunteer.Name</h4>
                                        <div class="volunteer-location"><i class="bi bi-geo-alt"></i> @volunteer.City</div>
                                        <div class="volunteer-contact">
                                            <a href="mailto:@volunteer.Email" class="contact-link">
                                                <i class="bi bi-envelope"></i> @volunteer.Email
                                            </a>
                                        </div>
                                        <div class="volunteer-contact">
                                            <a href="tel:@volunteer.Number" class="contact-link">
                                                <i class="bi bi-telephone"></i> @volunteer.Number
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="empty-state">
                            <i class="bi bi-person-slash empty-icon"></i>
                            <p>No volunteers have signed up yet.</p>
                        </div>
                    }
                </div>

                <div class="content-card mb-4 animate-on-scroll slide-in-right">
                    <h2 class="section-title"><i class="bi bi-building"></i> Sponsors</h2>
                    @if (Model.Sponsors.Any())
                    {
                        <div class="sponsors-list">
                            @foreach (var sponsor in Model.Sponsors)
                            {
                                <div class="sponsor-card">
                                    <h4 class="sponsor-name">@sponsor.Name</h4>
                                    <div class="sponsor-contact">
                                        <a href="mailto:@sponsor.ContactEmail" class="contact-link">
                                            <i class="bi bi-envelope"></i> @sponsor.ContactEmail
                                        </a>
                                    </div>
                                    <div class="sponsor-contact">
                                        <a href="tel:@sponsor.Phone" class="contact-link">
                                            <i class="bi bi-telephone"></i> @sponsor.Phone
                                        </a>
                                    </div>
                                    @if (!string.IsNullOrEmpty(sponsor.Website))
                                    {
                                        <div class="sponsor-website">
                                            <a href="@sponsor.Website" target="_blank" class="btn btn-sm btn-outline-primary">
                                                <i class="bi bi-globe"></i> Visit Website
                                            </a>
                                        </div>
                                    }
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="empty-state">
                            <i class="bi bi-building-slash empty-icon"></i>
                            <p>No sponsors for this event yet.</p>
                        </div>
                    }

                    @if (User.IsInRole("Administrator") || User.IsInRole("Organizator"))
                    {
                        <div class="mt-3">
                            <a asp-action="AddSponsor" asp-route-eventId="@Model.Id" class="btn btn-eco-primary">
                                <i class="bi bi-plus-circle"></i> Add Sponsor
                            </a>
                        </div>
                    }
                </div>

                <div class="content-card mb-4 animate-on-scroll slide-in-right">
                    <h2 class="section-title"><i class="bi bi-camera"></i> Photos</h2>
                    @if (Model.EventPhotos != null && Model.EventPhotos.Any())
                    {
                        <div class="photo-preview-container">
                            <div class="photo-preview-grid">
                                @for (int i = 0; i < Math.Min(3, Model.EventPhotos.Count()); i++)
                                {
                                    var photo = Model.EventPhotos.ElementAt(i);
                                    <div class="photo-preview-item @(i == 0 ? "main-preview" : "")">
                                        <img src="@Url.Content(photo.Url)" alt="Preview @(i + 1)" class="preview-thumbnail" />
                                        @if (i == 2 && Model.EventPhotos.Count() > 3)
                                        {
                                            <div class="photo-count-overlay">
                                                <span>+@(Model.EventPhotos.Count() - 3)</span>
                                            </div>
                                        }
                                    </div>
                                }
                            </div>
                            <div class="photo-stats">
                                <div class="stat-item">
                                    <i class="bi bi-images"></i>
                                    <span>@Model.EventPhotos.Count() Photo@(Model.EventPhotos.Count() != 1 ? "s" : "")</span>
                                </div>
                            </div>
                            <div class="photo-actions">
                                <a href="#photoGallery" class="btn btn-sm btn-outline-primary">
                                    <i class="bi bi-eye"></i> View Gallery
                                </a>
                                @if (User.IsInRole("Administrator") || User.IsInRole("Organizator"))
                                {
                                    <a asp-action="AddPhoto" asp-route-id="@Model.Id" class="btn btn-sm btn-eco-primary">
                                        <i class="bi bi-plus"></i> Add More
                                    </a>
                                }
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="photo-preview-empty">
                            <div class="empty-preview-icon">
                                <i class="bi bi-camera-fill"></i>
                            </div>
                            <p class="empty-preview-text">No photos yet</p>
                            @if (User.IsInRole("Administrator") || User.IsInRole("Organizator"))
                            {
                                <a asp-action="AddPhoto" asp-route-id="@Model.Id" class="btn btn-eco-primary btn-sm">
                                    <i class="bi bi-plus-circle"></i> Upload Photos
                                </a>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div id="lightboxModal" class="lightbox-modal">
    <div class="lightbox-content">
        <span class="lightbox-close" onclick="closeLightbox()">&times;</span>
        <button class="lightbox-nav lightbox-prev" onclick="prevPhoto()">
            <i class="bi bi-chevron-left"></i>
        </button>
        <button class="lightbox-nav lightbox-next" onclick="nextPhoto()">
            <i class="bi bi-chevron-right"></i>
        </button>
        <img id="lightboxImage" src="" alt="Event Photo" />
        <div class="lightbox-caption">
            <span id="lightboxCounter"></span>
        </div>
    </div>
</div>

@section Scripts {
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
    <script src="~/js/event-details.js"></script>
    <script>
        initMap(@Model.Latitude, @Model.Longitude, '@Model.Name');
        initAnimations();
        initStarRating();
        initPhotoGallery();
        initPhotoGallery();

        document.addEventListener("DOMContentLoaded", function () {
            const form = document.getElementById("participation-form");
            const messageDiv = document.getElementById("participation-message");

            if (form) {
                form.addEventListener("submit", function (e) {
                    e.preventDefault();

                    const formData = new FormData(form);

                    fetch(form.action, {
                        method: "POST",
                        body: formData,
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest'
                        }
                    })
                    .then(response => {
                        if (!response.ok) throw new Error("Network response was not ok");
                        return response.json();
                    })
                    .then(data => {
                        if (data.isParticipating) {
                            messageDiv.innerHTML = `<div class="alert alert-success"><i class="bi bi-check-circle"></i> ${data.message}</div>`;
                            form.querySelector("button").textContent = "Cancel participation";
                        } else {
                            messageDiv.innerHTML = `<div class="alert alert-warning"><i class="bi bi-x-circle"></i> ${data.message}</div>`;
                            form.querySelector("button").textContent = "Volunteer for this Event";
                        }
                    })
                    .catch(error => {
                        console.error("Error:", error);
                        messageDiv.innerHTML = `<div class="alert alert-danger"><i class="bi bi-exclamation-circle"></i> Something went wrong. Please try again.</div>`;
                    });
                });
            }
        });
    </script>
}