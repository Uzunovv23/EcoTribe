@model List<EcoTribe.BusinessObjects.ViewModels.EventViewModel>

@{
    ViewData["Title"] = "Events";
}

<h2 class="mb-4">Events</h2>

@if (Model != null && Model.Any())
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>#</th>
                <th>Name</th>
                <th>City</th>
                <th>Type</th>
                <th>Volunteers Required</th>
                <th>Description</th>
                <th>Latitude</th>
                <th>Longitude</th>
                <th>Start</th>
                <th>End</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var eventItem in Model)
            {
                <tr id="event-row-@eventItem.Id">
                    <td>@eventItem.Id</td>
                    <td>@eventItem.Name</td>
                    <td>@eventItem.City</td>
                    <td>@eventItem.Type</td>
                    <td>@eventItem.RequiredVolunteers</td>
                    <td>@eventItem.Description</td>
                    <td>@eventItem.Latitude</td>
                    <td>@eventItem.Longitude</td>
                    <td>@eventItem.Start.ToString("yyyy-MM-dd HH:mm")</td>
                    <td>@eventItem.End.ToString("yyyy-MM-dd HH:mm")</td>
                    <td>
                        <div class="btn-group">
                            <a href="@Url.Action("Edit", "Event", new { id = eventItem.Id })" class="btn btn-primary me-2">Edit</a>
                            <button class="btn btn-danger" onclick="deleteEvent(@eventItem.Id)">Delete</button>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No events available.</p>
}

<a href="@Url.Action("Create", "Event")" class="btn btn-primary mt-3">Create New Event</a>

<!-- Anti-forgery token -->
@Html.AntiForgeryToken()

<script>
    function deleteEvent(eventId) {
        if (!confirm("Are you sure you want to delete this event?")) {
            return;
        }

        const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

        fetch(`/Event/DeleteConfirmed`, {
            method: "POST",
            headers: {
                "Content-Type": "application/x-www-form-urlencoded",
                "RequestVerificationToken": token
            },
            body: new URLSearchParams({ id: eventId })
        })
        .then(response => {
            if (!response.ok) {
                throw new Error("Failed to delete event.");
            }
            return response.text();
        })
        .then(() => {
            document.getElementById(`event-row-${eventId}`).remove(); 
        })
        .catch(error => alert(error.message));
    }
</script>
