@model List<EcoTribe.BusinessObjects.ViewModels.LocationViewModel>
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

@{
    ViewData["Title"] = "Locations";
}

<h2>Locations</h2>

@if (User.IsInRole("Administrator"))
{
    <a asp-controller="Location" asp-action="Create" class="btn btn-primary mb-3">Add Location</a>
}

<table class="table">
    <thead>
        <tr>
            <th>ID</th>
            <th>Name</th>
            <th>City</th>
            <th>Latitude</th>
            <th>Longitude</th>
            <th>Description</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var location in Model)
        {
            <tr id="location-row-@location.Id">
                <td>@location.Id</td>
                <td>@location.Name</td>
                <td>@location.City</td>
                <td>@location.Latitude</td>
                <td>@location.Longitude</td>
                <td>@(string.IsNullOrEmpty(location.Description) ? "N/A" : location.Description)</td>
                <td>
                    @if (User.IsInRole("Administrator"))
                    {
                        <a asp-controller="Location" asp-action="Edit" asp-route-id="@location.Id" class="btn btn-primary me-2">
                            <i class="fas fa-edit"></i> Edit
                        </a>
                        <button class="btn btn-danger" onclick="deleteLocation(@location.Id)">
                            <i class="fas fa-trash"></i> Delete
                        </button>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@Html.AntiForgeryToken()

<script>
    function deleteLocation(locationId) {
        if (!confirm("Are you sure you want to delete this location?")) {
            return;
        }

        const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

        fetch(`/Location/DeleteConfirmed`, {
            method: "POST",
            headers: {
                "Content-Type": "application/x-www-form-urlencoded",
                "RequestVerificationToken": token
            },
            body: new URLSearchParams({ id: locationId })
        })
        .then(response => {
            if (!response.ok) {
                throw new Error("Failed to delete location.");
            }
            return response.text();
        })
        .then(() => {
            document.getElementById(`location-row-${locationId}`).remove(); 
        })
        .catch(error => alert(error.message));
    }
</script>
