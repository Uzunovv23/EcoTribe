@model IEnumerable<EcoTribe.BusinessObjects.ViewModels.OrganizationViewModel>
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

<h2 class="text-center my-4">Organizations</h2>

<div class="container">
    @if (User.IsInRole("Administrator") || User.IsInRole("Organizator"))
    {
        <div class="d-flex justify-content-end mb-3">
            <a asp-controller="Organization" asp-action="Create" class="btn btn-success">
                <i class="fas fa-plus"></i> Add Organization
            </a>
        </div>
    }

    <table class="table table-striped table-bordered text-center">
        <thead class="thead-dark">
            <tr>
                <th>Name</th>
                <th>City</th>
                <th>Contact Email</th>
                <th>Phone</th>
                <th>Website</th>
                <th>Description</th>
                <th>Created At</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var organization in Model)
            {
                <tr id="organization-row-@organization.Id">
                    <td>@organization.Name</td>
                    <td>@organization.City</td>
                    <td>@organization.ContactEmail</td>
                    <td>@organization.Phone</td>
                    <td>
                        @if (!string.IsNullOrEmpty(organization.Website))
                        {
                            <a href="@organization.Website" target="_blank">Visit</a>
                        }
                        else
                        {
                            <span>-</span>
                        }
                    </td>
                    <td>@organization.Description</td>
                    <td>@organization.CreatedAt.ToString("yyyy-MM-dd")</td>
                    <td>
                        @if (User.IsInRole("Administrator"))
                        {
                            <div class="d-flex gap-2">
                                <a asp-controller="Organization" asp-action="Edit" asp-route-id="@organization.Id" class="btn btn-primary">
                                    <i class="fas fa-edit"></i> Edit
                                </a>
                                <button class="btn btn-danger" onclick="confirmDelete(@organization.Id)">
                                    <i class="fas fa-trash"></i> Delete
                                </button>
                            </div>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@Html.AntiForgeryToken()

<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this organization?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
            </div>
        </div>
    </div>
</div>

<script>
    let deleteId = null;

    function confirmDelete(id) {
        deleteId = id;
        var deleteModal = new bootstrap.Modal(document.getElementById("deleteConfirmationModal"));
        deleteModal.show();
    }

    document.getElementById("confirmDeleteBtn").addEventListener("click", function () {
        if (deleteId !== null) {
            const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

            fetch(`/Organization/DeleteConfirmed`, {
                method: "POST",
                headers: {
                    "Content-Type": "application/x-www-form-urlencoded",
                    "RequestVerificationToken": token
                },
                body: new URLSearchParams({ id: deleteId })
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error("Failed to delete organization.");
                }
                return response.text();
            })
            .then(() => {
                document.getElementById(`organization-row-${deleteId}`).remove();
                deleteId = null;
                bootstrap.Modal.getInstance(document.getElementById("deleteConfirmationModal")).hide();
            })
            .catch(error => alert(error.message));
        }
    });
</script>
