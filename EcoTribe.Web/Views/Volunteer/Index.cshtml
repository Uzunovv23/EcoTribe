@model IEnumerable<EcoTribe.BusinessObjects.ViewModels.VolunteerViewModel>
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

<h2 class="text-center my-4">Volunteers</h2>

@if (User.IsInRole("Administrator"))
{
    <div class="d-flex justify-content-end mb-3">
        <a asp-controller="Volunteer" asp-action="Create" class="btn btn-success">
            <i class="fas fa-plus"></i> Add Volunteer
        </a>
    </div>
}

    <table class="table table-striped table-bordered text-center">
        <thead class="thead-dark">
            <tr>
                <th>Name</th>
                <th>City</th>
                <th>Email</th>
                <th>Skills</th>
                <th>Preferred Events</th>
                <th>Location</th>
                <th>Phone Number</th>
                <th>Instagram</th>
                <th>Facebook</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var volunteer in Model)
            {
                <tr id="volunteer-row-@volunteer.Id">
                    <td>@volunteer.Name</td>
                    <td>@volunteer.City</td>
                    <td>@volunteer.Email</td>
                    <td>@volunteer.Skills</td>
                    <td>@volunteer.PreferredEvents</td>
                    <td>Lat: @volunteer.Latitude, Long: @volunteer.Longitude</td>
                    <td>@volunteer.Number</td>
                    <td>
                        @if (!string.IsNullOrEmpty(volunteer.Instagram))
                        {
                            <a href="@volunteer.Instagram" target="_blank">Instagram</a>
                        }
                        else
                        {
                            <span>-</span>
                        }
                    </td>
                    <td>
                        @if (!string.IsNullOrEmpty(volunteer.Facebook))
                        {
                            <a href="@volunteer.Facebook" target="_blank">Facebook</a>
                        }
                        else
                        {
                            <span>-</span>
                        }
                    </td>
                    <td>
                        <div class="d-flex gap-2">
                            <a asp-controller="Volunteer" asp-action="Edit" asp-route-id="@volunteer.Id" class="btn btn-primary">
                                <i class="fas fa-edit"></i> Edit
                            </a>
                            <button class="btn btn-danger" onclick="confirmDelete(@volunteer.Id)">
                                <i class="fas fa-trash"></i> Delete
                            </button>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@Html.AntiForgeryToken()

<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this volunteer?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
            </div>
        </div>
    </div>
</div>

<script>
    let deleteId = null;

    function confirmDelete(id) {
        deleteId = id;
        var deleteModal = new bootstrap.Modal(document.getElementById("deleteConfirmationModal"));
        deleteModal.show();
    }

    document.getElementById("confirmDeleteBtn").addEventListener("click", function () {
        if (deleteId !== null) {
            const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

            fetch(`/Volunteer/DeleteConfirmed`, {
                method: "POST",
                headers: {
                    "Content-Type": "application/x-www-form-urlencoded",
                    "RequestVerificationToken": token
                },
                body: new URLSearchParams({ id: deleteId })
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error("Failed to delete volunteer.");
                }
                return response.text();
            })
            .then(() => {
                document.getElementById(`volunteer-row-${deleteId}`).remove();
                deleteId = null;
                bootstrap.Modal.getInstance(document.getElementById("deleteConfirmationModal")).hide();
            })
            .catch(error => alert(error.message));
        }
    });
</script>
